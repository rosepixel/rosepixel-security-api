version: '3.7'

services:

  api:
    container_name: security_api
    build:
      context: .
      target: development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - 9229:9229
    command: npm run start:debug
    env_file:
      - .env
    networks:
      - backend
    depends_on:
      - kafka
      - zookeeper
      - mariadb
      - redis
      - rabbitmq
    
  mariadb:
    image: mariadb
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: develop
      MYSQL_DATABASE: security
      MYSQL_USER: root
      MYSQL_PASSWORD: develop
    networks:
      - backend
    ports:
      - 3306:3306
    restart: always
    volumes:
      - data:/var/lib/mariadb

  redis:
    image: redis
    restart: always
    hostname: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend
    command: redis-server --requirepass develop
    volumes:
      - data:/var/lib/redis

  rabbitmq:
    image: rabbitmq
    restart: always
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "root"
      RABBITMQ_DEFAULT_PASS: "develop"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend
    volumes:
      - data:/var/lib/rabbitmq
  
  kafkadrop:
    hostname: kafkadrop
    container_name: kafkadrop
    image: obsidiandynamics/kafdrop:latest
    environment:
      - KAFKA_BROKERCONNECT=kafka:19092
    ports:
      - 9000:9000
    depends_on:
      - zookeeper
      - kafka
    networks:
      - backend

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    volumes:
      - data:/var/lib/zookeeper
    networks:
      - backend
  
  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: LISTENER_DOCKER_INTERNAL://:19092,LISTENER_DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: __consumer_offsets:50:1,user.create:1:1
    volumes:
      - data:/var/lib/kafka
    depends_on:
      - zookeeper
    networks:
      - backend

networks:
  backend:
volumes:
  data:
